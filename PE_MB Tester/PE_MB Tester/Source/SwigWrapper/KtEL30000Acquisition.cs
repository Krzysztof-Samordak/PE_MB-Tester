//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Keysight.KtEL30000.Bridge {
[System.CodeDom.Compiler.GeneratedCode("swig","3.0")]

internal class KtEL30000Acquisition : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal KtEL30000Acquisition(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(KtEL30000Acquisition obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~KtEL30000Acquisition() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          KtEL30000CppApiPINVOKE.delete_KtEL30000Acquisition(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }


  public void Abort(string channelList) {
    KtEL30000CppApiPINVOKE.KtEL30000Acquisition_Abort(swigCPtr, channelList);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Initiate(string channelList) {
    KtEL30000CppApiPINVOKE.KtEL30000Acquisition_Initiate(swigCPtr, channelList);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
  }

}

}
