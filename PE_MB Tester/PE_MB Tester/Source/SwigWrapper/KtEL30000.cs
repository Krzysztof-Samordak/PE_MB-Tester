//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace Keysight.KtEL30000.Bridge {
[System.CodeDom.Compiler.GeneratedCode("swig","3.0")]

internal class KtEL30000 : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  private bool swigCMemOwnBase;

  internal KtEL30000(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwnBase = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(KtEL30000 obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~KtEL30000() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwnBase) {
          swigCMemOwnBase = false;
          KtEL30000CppApiPINVOKE.delete_KtEL30000(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

    public IviDriverOperation DriverOperation_
    {
        get { return DriverOperation(); }
    }
    public IviDriverIdentity Identity_
    {
        get { return Identity(); }
    }
    public IviDriverUtility Utility_
    {
        get { return Utility(); }
    }
    public KtEL30000System System_
    {
        get { return System(); }
    }
    public KtEL30000Status Status_
    {
        get { return Status(); }
    }
    public KtEL30000Trigger Trigger_
    {
        get { return Trigger(); }
    }
    public KtEL30000Memory Memory_
    {
        get { return Memory(); }
    }
    public KtEL30000Transient Transient_
    {
        get { return Transient(); }
    }
    public KtEL30000Operation Operation_
    {
        get { return Operation(); }
    }
    public KtEL30000Calibration Calibration_
    {
        get { return Calibration(); }
    }
    public KtEL30000Display Display_
    {
        get { return Display(); }
    }
    public KtEL30000Acquisition Acquisition_
    {
        get { return Acquisition(); }
    }
    public KtEL30000Measurement Measurement_
    {
        get { return Measurement(); }
    }
    public KtEL30000List List_
    {
        get { return List(); }
    }
    public KtEL30000Digital Digital_
    {
        get { return Digital(); }
    }
    public KtEL30000DataLog DataLog_
    {
        get { return DataLog(); }
    }
    public KtEL30000Sweep Sweep_
    {
        get { return Sweep(); }
    }
    public KtEL30000IOControl IOControl_
    {
        get { return IOControl(); }
    }

  public KtEL30000(string resourceName, bool idQuery, bool reset) : this(KtEL30000CppApiPINVOKE.new_KtEL30000__SWIG_0(resourceName, idQuery, reset), true) {
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public KtEL30000(string resourceName, bool idQuery, bool reset, string options) : this(KtEL30000CppApiPINVOKE.new_KtEL30000__SWIG_1(resourceName, idQuery, reset, options), true) {
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public void Close() {
    KtEL30000CppApiPINVOKE.KtEL30000_Close(swigCPtr);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public IviDriverOperation DriverOperation() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_DriverOperation(swigCPtr);
    IviDriverOperation ret = (cPtr == global::System.IntPtr.Zero) ? null : new IviDriverOperation(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IviDriverIdentity Identity() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Identity(swigCPtr);
    IviDriverIdentity ret = (cPtr == global::System.IntPtr.Zero) ? null : new IviDriverIdentity(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public IviDriverUtility Utility() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Utility(swigCPtr);
    IviDriverUtility ret = (cPtr == global::System.IntPtr.Zero) ? null : new IviDriverUtility(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000System System() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_System(swigCPtr);
    KtEL30000System ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000System(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Status Status() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Status(swigCPtr);
    KtEL30000Status ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Status(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Trigger Trigger() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Trigger(swigCPtr);
    KtEL30000Trigger ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Trigger(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Memory Memory() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Memory(swigCPtr);
    KtEL30000Memory ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Memory(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Transient Transient() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Transient(swigCPtr);
    KtEL30000Transient ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Transient(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Operation Operation() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Operation(swigCPtr);
    KtEL30000Operation ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Operation(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Calibration Calibration() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Calibration(swigCPtr);
    KtEL30000Calibration ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Calibration(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Display Display() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Display(swigCPtr);
    KtEL30000Display ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Display(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Acquisition Acquisition() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Acquisition(swigCPtr);
    KtEL30000Acquisition ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Acquisition(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Measurement Measurement() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Measurement(swigCPtr);
    KtEL30000Measurement ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Measurement(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000List List() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_List(swigCPtr);
    KtEL30000List ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000List(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Digital Digital() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Digital(swigCPtr);
    KtEL30000Digital ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Digital(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000DataLog DataLog() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_DataLog(swigCPtr);
    KtEL30000DataLog ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000DataLog(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000Sweep Sweep() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_Sweep(swigCPtr);
    KtEL30000Sweep ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000Sweep(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000IOControl IOControl() {
    global::System.IntPtr cPtr = KtEL30000CppApiPINVOKE.KtEL30000_IOControl(swigCPtr);
    KtEL30000IOControl ret = (cPtr == global::System.IntPtr.Zero) ? null : new KtEL30000IOControl(cPtr, true);
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public KtEL30000(System.IntPtr instance) : this(KtEL30000CppApiPINVOKE.new_KtEL30000__SWIG_2(instance), true) {
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
  }

  public System.IntPtr GetInstance() {
    System.IntPtr ret = KtEL30000CppApiPINVOKE.KtEL30000_GetInstance(swigCPtr); 
    if (KtEL30000CppApiPINVOKE.SWIGPendingException.Pending) throw KtEL30000CppApiPINVOKE.SWIGPendingException.Retrieve();
    return ret; 
  }

}

}
